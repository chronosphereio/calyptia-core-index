Conditions:
  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref 'IamPermissionsBoundary'
      - none
Description: Calyptia Core EC2 Instance
Mappings:
  RegionsAmis:
    ap-northeast-1:
      '111': ami-0e29c6f890fc685bf
      '112': ami-0a7d65c994eab745d
    ap-northeast-2:
      '111': ami-0d91787406a260459
      '112': ami-0844650b7562187ad
    ap-south-1:
      '111': ami-05e81756e3fc0cb32
      '112': ami-00f2d29f3c4045b4a
    ap-southeast-1:
      '111': ami-0e95020379b25e1c1
      '112': ami-0257851596186f7b1
    ap-southeast-2:
      '111': ami-020e74b0f87d581a8
      '112': ami-041f8eaf206d9f9ba
    us-east-1:
      '111': ami-0fdbc151928cb8ed6
      '112': ami-05454c68fb532c79d
    us-east-2:
      '111': ami-0d878e6d063d86c54
      '112': ami-0837b05bfa02ceb7d
    us-west-1:
      '111': ami-02b305e27846a446d
      '112': ami-08a28f5e3fd769a2e
    us-west-2:
      '111': ami-021f40efa662e6af0
      '112': ami-029193654cef3ab24
Parameters:
  CalyptiaCoreToken:
    Type: String
  IamPermissionsBoundary:
    Default: none
    Description: Optional - IamPermissionsBoundary for Instance Role
    Type: String
  InstanceType:
    Type: String
  SubnetId:
    Type: AWS::EC2::Subnet::Id
  Version:
    AllowedValues:
      - '111'
      - '112'
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
Resources:
  CalyptiaCore:
    DependsOn:
      - InstanceRole
      - IamInstanceProfile
    Properties:
      IamInstanceProfile: !Ref 'IamInstanceProfile'
      ImageId: !FindInMap
        - RegionsAmis
        - !Ref 'AWS::Region'
        - !Ref 'Version'
      InstanceType: !Ref 'InstanceType'
      SecurityGroupIds:
        - !GetAtt 'InstanceSecurityGroup.GroupId'
      SubnetId: !Ref 'SubnetId'
      UserData: !Base64
        Fn::Join:
          - '='
          - - CALYPTIA_CLOUD_PROJECT_TOKEN
            - !Ref 'CalyptiaCoreToken'
    Type: AWS::EC2::Instance
  IamInstanceProfile:
    DependsOn:
      - InstanceRole
    Properties:
      Roles:
        - !Ref 'InstanceRole'
    Type: AWS::IAM::InstanceProfile
  InstanceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - !Sub 'ec2.${AWS::URLSuffix}'
        Version: '2012-10-17'
      Description: !Sub '${AWS::StackName} - Calyptia Core'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref 'IamPermissionsBoundary'
        - !Ref 'AWS::NoValue'
    Type: AWS::IAM::Role
  InstanceSecurityGroup:
    Properties:
      GroupDescription: !Sub '${AWS::StackName} - CalyptiaCore'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
